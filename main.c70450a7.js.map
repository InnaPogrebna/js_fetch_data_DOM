{"version":3,"sources":["scripts/main.js"],"names":["LIST_URL","DETAILS_URL","request","url","fetch","then","response","ok","setTimeout","alert","status","json","getPhone","createList","text","ul","document","createElement","forEach","elem","insertAdjacentHTML","name","body","append","getPhonesDetails","data","devicesId","promiseAll","map","device","id","Promise","all","phones","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAW,4DAEXC,EAAc,iFAGdC,EAAU,SAACC,GACRC,OAAAA,MAASJ,GAAAA,OAAAA,GAAWG,OAAAA,IACxBE,KAAK,SAAAC,GACA,IAACA,EAASC,GACNC,MAAAA,WAAW,WACfC,MAASH,GAAAA,OAAAA,EAASI,UACjB,KAGEJ,OAAAA,EAASK,UAIhBC,EAAW,WAAMV,OAAAA,EAAQ,iBAEzBW,EAAa,SAACC,GACZC,IAAAA,EAAKC,SAASC,cAAc,MAU3BH,OARPA,EAAKI,QAAQ,SAAAC,GACXJ,EAAGK,mBACSD,YAAAA,mBAAAA,OAAAA,EAAKE,KADjB,wBAKFL,SAASM,KAAKC,OAAOR,GAEdD,GAGT,SAASU,EAAiBC,GAClBC,IAEAC,EAFYF,EAAKG,IAAI,SAAAC,GAAUA,OAAAA,EAAOC,KAEfF,IAC3B,SAAAE,GAAM1B,OAAAA,MAASH,GAAAA,OAAAA,GAAc6B,OAAAA,EAA3B,YAGGC,OAAAA,QAAQC,IAAIL,GAGrBf,IACGP,KAAK,SAAAS,GAAQD,OAAAA,EAAWC,KACxBT,KAAK,SAAA4B,GAAUT,OAAAA,EAAiBS,KAChCC,MAAM,SAAAC,GAAS1B,OAAAA,MAAM0B","file":"main.c70450a7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst LIST_URL = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api';\nconst DETAILS_URL = 'https://mate-academy.github.io/'\n+ 'phone-catalogue-static/api/phones/:phoneId.json';\n\nconst request = (url) => {\n  return fetch(`${LIST_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw setTimeout(() => {\n          alert(`${response.status}`);\n        }, 5000);\n      };\n\n      return response.json();\n    });\n};\n\nconst getPhone = () => request('/phones.json');\n\nconst createList = (text) => {\n  const ul = document.createElement('ul');\n\n  text.forEach(elem => {\n    ul.insertAdjacentHTML(`beforeend`, `\n          <li>${elem.name}</li>\n          `);\n  });\n\n  document.body.append(ul);\n\n  return text;\n};\n\nfunction getPhonesDetails(data) {\n  const devicesId = data.map(device => device.id);\n\n  const promiseAll = devicesId.map(\n    id => fetch(`${DETAILS_URL}${id}.json`)\n  );\n\n  return Promise.all(promiseAll);\n}\n\ngetPhone()\n  .then(text => createList(text))\n  .then(phones => getPhonesDetails(phones))\n  .catch(error => alert(error));\n"]}